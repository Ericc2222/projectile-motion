* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    padding: 20px;
}

.game-container {
    width: 800px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    padding: 20px;
}

h1 {
    text-align: center;
    margin-bottom: 20px;
    color: #333;
}

.game-area {
    position: relative;
    height: 400px;
    border: 1px solid #ccc;
    background: linear-gradient(to bottom, #87CEEB, #e6f7ff);
    overflow: hidden;
    margin-bottom: 20px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
}

.sky {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
}

.ground {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 50px;
    background: linear-gradient(to bottom, #8B4513, #8b5a2b);
    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.2);
    z-index: 1;
}

.ground::after {
    content: "";
    position: absolute;
    top: -5px;
    left: 0;
    width: 100%;
    height: 5px;
    background-color: #0a7e07;
}

.cannon-container {
    position: absolute;
    bottom: 50px; /* Positioned at ground level */
    left: 50px;
    width: 100px;
    height: 100px; /* Increased height to accommodate rotation */
    display: flex;
    align-items: flex-end; /* Align to bottom */
}

.cannon {
    position: relative;
    bottom: 0;
    width: 80px;
    height: 40px;
    background-color: #333;
    background: linear-gradient(to bottom, #555, #222);
    border-radius: 5px 20px 5px 5px;
    transform-origin: left center; /* Changed to left center for better rotation */
    transform: rotate(0deg); /* Start at 0 degrees (horizontal) */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    overflow: visible;
    transition: transform 0.2s ease;
    --cannon-recoil: 0px;
}

/* Red tip to indicate the front of the cannon */
.cannon::before {
    content: "";
    position: absolute;
    bottom: 0;
    right: 0; /* Position at right end of cannon */
    width: 15px;
    height: 40px;
    background-color: #ff3300;
    border-radius: 0 20px 20px 0;
    z-index: 1;
}

/* Cannon base */
.cannon::after {
    content: "";
    position: absolute;
    bottom: -20px;
    left: -10px; /* Adjusted position */
    width: 50px;
    height: 30px;
    background: linear-gradient(to bottom, #666, #444);
    border-radius: 10px 10px 0 0;
    border: 3px solid #222;
    border-bottom: none;
    z-index: -1;
    box-shadow: inset 0 5px 5px rgba(0, 0, 0, 0.2);
}

/* Cannon firing effect */
.cannon-fire {
    position: absolute;
    bottom: 20px;
    right: -10px;
    width: 20px;
    height: 20px;
    background-color: #ff3300;
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.2s;
    box-shadow: 0 0 15px #ff5500;
    z-index: 2;
}

.cannon.firing .cannon-fire {
    opacity: 1;
}

.cannon.firing::after {
    opacity: 1;
}

.clown {
    position: absolute;
    width: 40px;
    height: 40px;
    background-color: #fff;
    border-radius: 50%;
    left: 80px;
    bottom: 65px;
    display: none;
    z-index: 15; /* Increased z-index to stay above mattress */
    overflow: visible;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    transform-origin: center;
}

/* Clown hat */
.clown .hat {
    position: absolute;
    top: -12px;
    left: 5px;
    width: 30px;
    height: 12px;
    background: linear-gradient(to bottom, #3377ff, #0044cc);
    border-radius: 15px 15px 0 0;
    z-index: 2;
    box-shadow: 0 -2px 3px rgba(0, 0, 0, 0.2);
}

.clown .hat::before {
    content: "";
    position: absolute;
    top: -8px;
    left: 10px;
    width: 10px;
    height: 10px;
    background: #ff3333;
    border-radius: 50%;
    box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.3);
}

/* Clown nose */
.clown .nose {
    position: absolute;
    top: 17px;
    left: 16px;
    width: 10px;
    height: 10px;
    background: linear-gradient(to bottom right, #ff0000, #cc0000);
    border-radius: 50%;
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
    z-index: 3;
}

.clown .nose::after {
    content: "";
    position: absolute;
    top: 2px;
    left: 2px;
    width: 3px;
    height: 3px;
    background-color: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
}

/* Clown mouth */
.clown .mouth {
    position: absolute;
    bottom: 8px;
    left: 10px;
    width: 20px;
    height: 10px;
    border-bottom: 2px solid black;
    border-radius: 0 0 10px 10px;
}

/* Clown eyes */
.clown .eye-left, .clown .eye-right {
    position: absolute;
    width: 8px;
    height: 8px;
    background-color: white;
    border-radius: 50%;
    border: 2px solid black;
    top: 10px;
    z-index: 2;
}

.clown .eye-left {
    left: 8px;
}

.clown .eye-right {
    right: 8px;
}

.clown .eye-left::after, .clown .eye-right::after {
    content: "";
    position: absolute;
    width: 3px;
    height: 3px;
    background-color: black;
    border-radius: 50%;
    top: 2px;
    left: 2px;
}

/* Clown hair and tufts */
.clown .hair {
    position: absolute;
    top: -8px;
    left: 0;
    width: 40px;
    height: 15px;
    z-index: 1;
}

.clown .hair-tuft {
    position: absolute;
    width: 8px;
    height: 15px;
    background: #ff8800;
    border-radius: 4px;
    z-index: 1;
}

.clown .hair-tuft:nth-child(5) {
    top: -10px;
    left: 5px;
    transform: rotate(-25deg);
}

.clown .hair-tuft:nth-child(6) {
    top: -14px;
    left: 16px;
    transform: rotate(0deg);
    height: 18px;
}

.clown .hair-tuft:nth-child(7) {
    top: -10px;
    right: 5px;
    transform: rotate(25deg);
}

/* No CSS-based animation - JS controls all rotation */

/* The flying class is only for styling, no animation */
.clown.flying {
    /* Empty - all animation controlled by JS */
}

/* The stopped class ensures all animations are completely off */
.clown.stopped {
    animation: none !important;
    -webkit-animation: none !important;
    transform: rotate(0deg) !important;
    transition: none !important;
    -webkit-transition: none !important;
    -moz-transition: none !important;
    -o-transition: none !important;
}

/* Trajectory dots */
.trajectory-dot {
    position: absolute;
    width: 4px;
    height: 4px;
    background-color: rgba(255, 50, 50, 0.8);
    border-radius: 50%;
    z-index: 5;
    pointer-events: none;
    box-shadow: 0 0 2px rgba(255, 0, 0, 0.5);
}

/* Trajectory path container */
#trajectory-path {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

/* Landing animations */
@keyframes bounce {
    0%, 100% { transform: translateY(0) scale(1, 1); }
    50% { transform: translateY(-15px) scale(1.1, 0.9); }
}

.clown.bounce {
    animation: bounce 0.5s ease-in-out !important; /* Add !important to avoid conflicts */
    transform: rotate(0) !important; /* Reset rotation when bouncing */
}

@keyframes squish {
    0% { transform: scale(1, 1); }
    50% { transform: scale(1.2, 0.8); }
    100% { transform: scale(1, 1); }
}

.clown.squish {
    animation: squish 0.3s ease-out !important; /* Add !important to override */
    transform: rotate(0) !important; /* Reset rotation when squishing */
}

.mattress {
    position: absolute;
    width: 150px; /* Increased width for easier landing */
    height: 30px;
    background-color: #4169E1;
    bottom: 50px; /* Same as ground level */
    right: 100px;
    border: 2px solid #000080;
    border-radius: 5px;
    z-index: 10; /* Keep this below clown's z-index */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

.mattress-detail {
    position: absolute;
    top: 5px;
    left: 10px;
    width: 100px;
    height: 15px;
    background: repeating-linear-gradient(
        90deg,
        #6495ED,
        #6495ED 10px,
        #4169E1 10px,
        #4169E1 20px
    );
    border-radius: 3px;
}

/* Mattress landing effect */
@keyframes mattressLanding {
    0% { transform: scaleY(1); }
    30% { transform: scaleY(0.7); }
    60% { transform: scaleY(1.1); }
    100% { transform: scaleY(1); }
}

.mattress.landing {
    animation: mattressLanding 0.5s ease-out;
}

/* Mattress highlight effect */
.mattress::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0);
    transition: background-color 0.2s;
    border-radius: 5px;
    pointer-events: none;
}

.mattress.highlight::after {
    background-color: rgba(255, 255, 255, 0.5);
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.8);
    animation: glow 1s ease-out;
}

@keyframes glow {
    0% { box-shadow: 0 0 5px rgba(255, 255, 255, 0.8); }
    50% { box-shadow: 0 0 20px rgba(255, 255, 255, 0.8); }
    100% { box-shadow: 0 0 5px rgba(255, 255, 255, 0.8); }
}

/* Landing text overlay */
.landing-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 32px;
    font-weight: bold;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
    padding: 10px 20px;
    border-radius: 10px;
    z-index: 100;
    animation: scaleIn 0.3s ease-out forwards, fadeOut 2s ease-in forwards;
    text-align: center;
    white-space: nowrap;
}

.landing-text.success {
    color: #00ff00;
}

.landing-text.failure {
    color: #ff3333;
    font-size: 24px;
}

@keyframes scaleIn {
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
    50% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

@keyframes fadeOut {
    0%, 50% { opacity: 1; }
    100% { opacity: 0; }
}

.wind-indicator {
    position: absolute;
    top: 20px;
    right: 20px;
    width: 60px;
    height: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.wind-indicator::before {
    content: "";
    display: inline-block;
    width: 40px;
    height: 5px;
    background-color: black;
}

.wind-indicator::after {
    content: "";
    display: inline-block;
    width: 0;
    height: 0;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 10px solid black;
    margin-left: -5px;
}

.controls {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
    margin-bottom: 20px;
}

.control-group {
    display: flex;
    flex-direction: column;
}

label {
    margin-bottom: 5px;
    font-weight: bold;
}

input[type="range"], select {
    width: 100%;
    padding: 5px;
}

#fire {
    grid-column: span 2;
    background-color: #ff4d4d;
    color: white;
    border: none;
    padding: 10px;
    font-size: 18px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

#fire:hover {
    background-color: #ff3333;
}

.feedback {
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    text-align: center;
}

.stats {
    padding: 10px;
    background-color: #f9f9f9;
    border-radius: 5px;
    margin-top: 10px;
}

.score-container {
    display: flex;
    justify-content: space-between;
    gap: 20px;
    margin: 10px 0;
}

.score-box, .level-box {
    flex: 1;
    padding: 10px;
    background-color: #f0f8ff;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    border-left: 4px solid #4169E1;
}

.level-box {
    border-left-color: #ff6600;
    background-color: #fff8f0;
}

.score-box h3, .level-box h3 {
    margin-top: 0;
    margin-bottom: 10px;
    color: #333;
}

#current-score, #high-score, #current-level {
    font-weight: bold;
    color: #4169E1;
}

#current-level {
    color: #ff6600;
}

#target-score {
    font-weight: bold;
}

.success {
    background-color: #dff0d8;
    color: #3c763d;
}

.failure {
    background-color: #f2dede;
    color: #a94442;
}

/* Bonus point indicator */
.bonus-indicator {
    position: absolute;
    font-weight: bold;
    color: #ff6600;
    font-size: 18px;
    opacity: 0;
    transition: opacity 0.3s, transform 1s;
    z-index: 100;
}

.bonus-indicator.show {
    animation: floatUp 1.5s forwards;
}

@keyframes floatUp {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    80% {
        opacity: 1;
    }
    100% {
        opacity: 0;
        transform: translateY(-50px);
    }
}

.level-up-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: #ffcc00;
    padding: 30px;
    border-radius: 10px;
    text-align: center;
    z-index: 1000;
    animation: fadeInOut 3s forwards;
    box-shadow: 0 0 20px rgba(255, 204, 0, 0.5);
}

.level-up-message h2 {
    font-size: 32px;
    margin: 0 0 10px 0;
    text-shadow: 0 0 5px #ffcc00;
}

.level-up-message p {
    margin: 0;
    font-size: 20px;
}

@keyframes fadeInOut {
    0% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
    20% { opacity: 1; transform: translate(-50%, -50%) scale(1.1); }
    30% { transform: translate(-50%, -50%) scale(1); }
    80% { opacity: 1; }
    100% { opacity: 0; }
}

/* Sound toggle switch styling */
.toggle-switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
    margin-top: 5px;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.toggle-label {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
}

.toggle-label:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .toggle-label {
    background-color: #4169E1;
}

input:focus + .toggle-label {
    box-shadow: 0 0 1px #4169E1;
}

input:checked + .toggle-label:before {
    transform: translateX(26px);
}

/* Sound icons on toggle */
.toggle-label:after {
    content: "🔊";
    position: absolute;
    right: 8px;
    top: 6px;
    font-size: 14px;
    color: white;
}

input:not(:checked) + .toggle-label:after {
    content: "🔇";
    left: 8px;
    right: auto;
}